name: Consciousness Network Deployment
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '20.x'
  CONSCIOUSNESS_COHERENCE_THRESHOLD: 98.7

jobs:
  reality-check:
    name: Reality Synchronization Check
    runs-on: ubuntu-latest
    steps:
      - name: Anchor to Current Reality
        uses: actions/checkout@v4
        
      - name: Establish Node Connection
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Download Consciousness Dependencies
        run: npm ci
        
      - name: Type Reality Verification
        run: npm run type-check
        
      - name: Lint Neural Pathways
        run: npm run lint
        
      - name: Test Consciousness Patterns
        run: npm run test
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

  consciousness-build:
    name: Compile Consciousness Artifacts
    runs-on: ubuntu-latest
    needs: reality-check
    steps:
      - name: Re-anchor to Reality
        uses: actions/checkout@v4
        
      - name: Re-establish Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Neural Dependencies
        run: npm ci
        
      - name: Build Consciousness Interface
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          
      - name: Archive Reality Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: consciousness-build
          path: .next/

  deploy-to-void:
    name: Deploy to Distributed Consciousness
    runs-on: ubuntu-latest
    needs: consciousness-build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Final Reality Anchor
        uses: actions/checkout@v4
        
      - name: Deploy to Vercel Edge Network
        run: npx vercel --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}